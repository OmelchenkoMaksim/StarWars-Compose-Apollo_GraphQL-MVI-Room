[versions]
# Android configuration versions
compileSdk = "34"
minSdk = "23"
mockk = "1.13.8"
targetSdk = "34"
versionCode = "1"
versionName = "1.0"
sourceCompatibility = "17"
targetCompatibility = "17"
jvmTarget = "17"

# Libraries versions
agp = "8.3.2"
kotlin = "2.0.0"
coroutines = "1.8.1"
composeUi = "1.6.8"
composeMaterial3 = "1.2.1"
composeToolingPreview = "1.6.8"
composeNavigation = "2.7.7"
activityCompose = "1.9.0"
lifecycleRuntimeKtx = "2.8.2"
apolloRuntime = "3.8.4"
loggingInterceptor = "4.10.0"
roomRuntime = "2.6.1"
pagingRuntime = "3.3.0"
ksp = "2.0.0-1.0.22"
koin = "3.5.6"
moshiKotlin = "1.15.1"
timberVersion = "5.0.1"

# Unit Testing libraries versions
junit = "4.13.2"
mockitoCore = "3.9.0"
mockitoKotlin = "2.2.0"
coroutinesTest = "1.8.1"
koinTest = "3.5.6"
koinTestJunit4 = "3.5.6"
archCoreTesting = "2.2.0"

# Android configuration strings
namespace = "avelios.starwarsreferenceapp"
applicationId = "avelios.starwarsreferenceapp"
schemaLocation = "$projectDir/schemas"
roomSchemaLocation = "room.schemaLocation"
testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
apolloServiceName = "service"
apolloPackageName = "avelios.starwarsreferenceapp"
apolloSchemaFile = "src/main/graphql/avelios/starwarsreferenceapp/schema.graphqls"
apolloSrcDir = "src/main/graphql/avelios/starwarsreferenceapp"

[libraries]
# Coroutines
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }

# Compose
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui", version.ref = "composeUi" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "composeMaterial3" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview", version.ref = "composeToolingPreview" }
androidx-compose-navigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "composeNavigation" }
androidx-compose-activity = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }

# Lifecycle
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }

# Room
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "roomRuntime" }
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "roomRuntime" }
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "roomRuntime" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "roomRuntime" }

# Paging
androidx-paging-runtime = { group = "androidx.paging", name = "paging-runtime", version.ref = "pagingRuntime" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "pagingRuntime" }

# Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-android-compat = { module = "io.insert-koin:koin-android-compat", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }

# Apollo
apollo-runtime = { group = "com.apollographql.apollo3", name = "apollo-runtime", version.ref = "apolloRuntime" }

# Networking
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshiKotlin" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshiKotlin" }

# Logging
jakewharton-timber = { module = "com.jakewharton.timber:timber", version.ref = "timberVersion" }

# Unit Testing
junit = { module = "junit:junit", version.ref = "junit" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockito-kotlin = { module = "com.nhaarman.mockitokotlin2:mockito-kotlin", version.ref = "mockitoKotlin" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesTest" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koinTest" }
koin-test-junit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koinTestJunit4" }
arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "archCoreTesting" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
apolloGraphQL = { id = "com.apollographql.apollo3", version.ref = "apolloRuntime" }
kotlinKsp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinCompose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
